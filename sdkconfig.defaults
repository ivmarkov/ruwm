# The low-latency executor runs off from the main thread
CONFIG_ESP_MAIN_TASK_STACK_SIZE=80000

# Two of the other executors run from pthreads. TODO: set this at runtime
CONFIG_PTHREAD_TASK_STACK_SIZE_DEFAULT=20000

# Necessary, as we process Rust code on the system event loop, and sometimes run out of stack
CONFIG_ESP_SYSTEM_EVENT_TASK_STACK_SIZE=4096

# FSM ULP is doing the water meter edge counting, even when the main CPU is sleeping
CONFIG_ESP32_ULP_COPROC_ENABLED=y
CONFIG_ESP32_ULP_COPROC_RESERVE_MEM=2048
# Same but for the master branch
CONFIG_ULP_COPROC_ENABLED=y
CONFIG_ULP_COPROC_TYPE=ULP_COPROC_TYPE_FSM
CONFIG_ULP_COPROC_RESERVE_MEM=2048

# Enable HTTP server websockets (necessary for web UI)
CONFIG_HTTPD_WS_SUPPORT=y

# This is 10 by default. 16 is the maximum
CONFIG_LWIP_MAX_SOCKETS=16

# Enable the option to dispatch timer events directly from the timer ISR 
# (the executor & async timer wrapper of `esp-idf-svc` are compatible with this dispatch method)
# This has lower latency as compared to dispatching via an intermediate task
CONFIG_ESP_TIMER_SUPPORTS_ISR_DISPATCH_METHOD=y

# Enable posting to event loops directly from an ISR 
# (the event loop wrapper of `esp-idf-svc` is compatible with this, including the async postbox wrapper)
CONFIG_ESP_EVENT_POST_FROM_ISR=y
